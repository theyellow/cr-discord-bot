/*
 * Clash Royale API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package crdiscordbot.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * SearchResultClan
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-01-09T15:49:55.865Z")
public class SearchResultClan extends ClanBase {
  @SerializedName("type")
  private String type = null;

  @SerializedName("clanScore")
  private Integer clanScore = null;

  @SerializedName("requiredTrophies")
  private Integer requiredTrophies = null;

  @SerializedName("donationsPerWeek")
  private Integer donationsPerWeek = null;

  @SerializedName("clanChestLevel")
  private Integer clanChestLevel = null;

  @SerializedName("clanChestMaxLevel")
  private Integer clanChestMaxLevel = null;

  @SerializedName("members")
  private Integer members = null;

  @SerializedName("location")
  private Location location = null;

  public SearchResultClan type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public SearchResultClan clanScore(Integer clanScore) {
    this.clanScore = clanScore;
    return this;
  }

   /**
   * Get clanScore
   * @return clanScore
  **/
  @ApiModelProperty(value = "")
  public Integer getClanScore() {
    return clanScore;
  }

  public void setClanScore(Integer clanScore) {
    this.clanScore = clanScore;
  }

  public SearchResultClan requiredTrophies(Integer requiredTrophies) {
    this.requiredTrophies = requiredTrophies;
    return this;
  }

   /**
   * Get requiredTrophies
   * @return requiredTrophies
  **/
  @ApiModelProperty(value = "")
  public Integer getRequiredTrophies() {
    return requiredTrophies;
  }

  public void setRequiredTrophies(Integer requiredTrophies) {
    this.requiredTrophies = requiredTrophies;
  }

  public SearchResultClan donationsPerWeek(Integer donationsPerWeek) {
    this.donationsPerWeek = donationsPerWeek;
    return this;
  }

   /**
   * Get donationsPerWeek
   * @return donationsPerWeek
  **/
  @ApiModelProperty(value = "")
  public Integer getDonationsPerWeek() {
    return donationsPerWeek;
  }

  public void setDonationsPerWeek(Integer donationsPerWeek) {
    this.donationsPerWeek = donationsPerWeek;
  }

  public SearchResultClan clanChestLevel(Integer clanChestLevel) {
    this.clanChestLevel = clanChestLevel;
    return this;
  }

   /**
   * Get clanChestLevel
   * @return clanChestLevel
  **/
  @ApiModelProperty(value = "")
  public Integer getClanChestLevel() {
    return clanChestLevel;
  }

  public void setClanChestLevel(Integer clanChestLevel) {
    this.clanChestLevel = clanChestLevel;
  }

  public SearchResultClan clanChestMaxLevel(Integer clanChestMaxLevel) {
    this.clanChestMaxLevel = clanChestMaxLevel;
    return this;
  }

   /**
   * Get clanChestMaxLevel
   * @return clanChestMaxLevel
  **/
  @ApiModelProperty(value = "")
  public Integer getClanChestMaxLevel() {
    return clanChestMaxLevel;
  }

  public void setClanChestMaxLevel(Integer clanChestMaxLevel) {
    this.clanChestMaxLevel = clanChestMaxLevel;
  }

  public SearchResultClan members(Integer members) {
    this.members = members;
    return this;
  }

   /**
   * Get members
   * @return members
  **/
  @ApiModelProperty(value = "")
  public Integer getMembers() {
    return members;
  }

  public void setMembers(Integer members) {
    this.members = members;
  }

  public SearchResultClan location(Location location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public Location getLocation() {
    return location;
  }

  public void setLocation(Location location) {
    this.location = location;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchResultClan searchResultClan = (SearchResultClan) o;
    return Objects.equals(this.type, searchResultClan.type) &&
        Objects.equals(this.clanScore, searchResultClan.clanScore) &&
        Objects.equals(this.requiredTrophies, searchResultClan.requiredTrophies) &&
        Objects.equals(this.donationsPerWeek, searchResultClan.donationsPerWeek) &&
        Objects.equals(this.clanChestLevel, searchResultClan.clanChestLevel) &&
        Objects.equals(this.clanChestMaxLevel, searchResultClan.clanChestMaxLevel) &&
        Objects.equals(this.members, searchResultClan.members) &&
        Objects.equals(this.location, searchResultClan.location) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, clanScore, requiredTrophies, donationsPerWeek, clanChestLevel, clanChestMaxLevel, members, location, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchResultClan {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    clanScore: ").append(toIndentedString(clanScore)).append("\n");
    sb.append("    requiredTrophies: ").append(toIndentedString(requiredTrophies)).append("\n");
    sb.append("    donationsPerWeek: ").append(toIndentedString(donationsPerWeek)).append("\n");
    sb.append("    clanChestLevel: ").append(toIndentedString(clanChestLevel)).append("\n");
    sb.append("    clanChestMaxLevel: ").append(toIndentedString(clanChestMaxLevel)).append("\n");
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

