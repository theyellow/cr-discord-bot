/*
 * Clash Royale API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package crdiscordbot.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * PlayerDetail
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-01-09T15:49:55.865Z")
public class PlayerDetail extends PlayerBase {
  @SerializedName("bestTrophies")
  private Integer bestTrophies = null;

  @SerializedName("wins")
  private Integer wins = null;

  @SerializedName("losses")
  private Integer losses = null;

  @SerializedName("battleCount")
  private Integer battleCount = null;

  @SerializedName("threeCrownWins")
  private Integer threeCrownWins = null;

  @SerializedName("challengeCardsWon")
  private Integer challengeCardsWon = null;

  @SerializedName("challengeMaxWins")
  private Integer challengeMaxWins = null;

  @SerializedName("tournamentCardsWon")
  private Integer tournamentCardsWon = null;

  @SerializedName("tournamentBattleCount")
  private Integer tournamentBattleCount = null;

  @SerializedName("role")
  private String role = null;

  @SerializedName("donations")
  private Integer donations = null;

  @SerializedName("donationsReceived")
  private Integer donationsReceived = null;

  @SerializedName("totalDonations")
  private Integer totalDonations = null;

  @SerializedName("warDayWins")
  private Integer warDayWins = null;

  @SerializedName("clanCardsCollected")
  private Integer clanCardsCollected = null;

  @SerializedName("clan")
  private ClanBase clan = null;

  @SerializedName("arena")
  private Arena arena = null;

  @SerializedName("leagueStatistics")
  private Object leagueStatistics = null;

  @SerializedName("achievements")
  private List<Object> achievements = null;

  @SerializedName("cards")
  private List<Object> cards = null;

  @SerializedName("currentFavouriteCard")
  private Object currentFavouriteCard = null;

  public PlayerDetail bestTrophies(Integer bestTrophies) {
    this.bestTrophies = bestTrophies;
    return this;
  }

   /**
   * Get bestTrophies
   * @return bestTrophies
  **/
  @ApiModelProperty(value = "")
  public Integer getBestTrophies() {
    return bestTrophies;
  }

  public void setBestTrophies(Integer bestTrophies) {
    this.bestTrophies = bestTrophies;
  }

  public PlayerDetail wins(Integer wins) {
    this.wins = wins;
    return this;
  }

   /**
   * Get wins
   * @return wins
  **/
  @ApiModelProperty(value = "")
  public Integer getWins() {
    return wins;
  }

  public void setWins(Integer wins) {
    this.wins = wins;
  }

  public PlayerDetail losses(Integer losses) {
    this.losses = losses;
    return this;
  }

   /**
   * Get losses
   * @return losses
  **/
  @ApiModelProperty(value = "")
  public Integer getLosses() {
    return losses;
  }

  public void setLosses(Integer losses) {
    this.losses = losses;
  }

  public PlayerDetail battleCount(Integer battleCount) {
    this.battleCount = battleCount;
    return this;
  }

   /**
   * Get battleCount
   * @return battleCount
  **/
  @ApiModelProperty(value = "")
  public Integer getBattleCount() {
    return battleCount;
  }

  public void setBattleCount(Integer battleCount) {
    this.battleCount = battleCount;
  }

  public PlayerDetail threeCrownWins(Integer threeCrownWins) {
    this.threeCrownWins = threeCrownWins;
    return this;
  }

   /**
   * Get threeCrownWins
   * @return threeCrownWins
  **/
  @ApiModelProperty(value = "")
  public Integer getThreeCrownWins() {
    return threeCrownWins;
  }

  public void setThreeCrownWins(Integer threeCrownWins) {
    this.threeCrownWins = threeCrownWins;
  }

  public PlayerDetail challengeCardsWon(Integer challengeCardsWon) {
    this.challengeCardsWon = challengeCardsWon;
    return this;
  }

   /**
   * Get challengeCardsWon
   * @return challengeCardsWon
  **/
  @ApiModelProperty(value = "")
  public Integer getChallengeCardsWon() {
    return challengeCardsWon;
  }

  public void setChallengeCardsWon(Integer challengeCardsWon) {
    this.challengeCardsWon = challengeCardsWon;
  }

  public PlayerDetail challengeMaxWins(Integer challengeMaxWins) {
    this.challengeMaxWins = challengeMaxWins;
    return this;
  }

   /**
   * Get challengeMaxWins
   * @return challengeMaxWins
  **/
  @ApiModelProperty(value = "")
  public Integer getChallengeMaxWins() {
    return challengeMaxWins;
  }

  public void setChallengeMaxWins(Integer challengeMaxWins) {
    this.challengeMaxWins = challengeMaxWins;
  }

  public PlayerDetail tournamentCardsWon(Integer tournamentCardsWon) {
    this.tournamentCardsWon = tournamentCardsWon;
    return this;
  }

   /**
   * Get tournamentCardsWon
   * @return tournamentCardsWon
  **/
  @ApiModelProperty(value = "")
  public Integer getTournamentCardsWon() {
    return tournamentCardsWon;
  }

  public void setTournamentCardsWon(Integer tournamentCardsWon) {
    this.tournamentCardsWon = tournamentCardsWon;
  }

  public PlayerDetail tournamentBattleCount(Integer tournamentBattleCount) {
    this.tournamentBattleCount = tournamentBattleCount;
    return this;
  }

   /**
   * Get tournamentBattleCount
   * @return tournamentBattleCount
  **/
  @ApiModelProperty(value = "")
  public Integer getTournamentBattleCount() {
    return tournamentBattleCount;
  }

  public void setTournamentBattleCount(Integer tournamentBattleCount) {
    this.tournamentBattleCount = tournamentBattleCount;
  }

  public PlayerDetail role(String role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @ApiModelProperty(value = "")
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

  public PlayerDetail donations(Integer donations) {
    this.donations = donations;
    return this;
  }

   /**
   * Get donations
   * @return donations
  **/
  @ApiModelProperty(value = "")
  public Integer getDonations() {
    return donations;
  }

  public void setDonations(Integer donations) {
    this.donations = donations;
  }

  public PlayerDetail donationsReceived(Integer donationsReceived) {
    this.donationsReceived = donationsReceived;
    return this;
  }

   /**
   * Get donationsReceived
   * @return donationsReceived
  **/
  @ApiModelProperty(value = "")
  public Integer getDonationsReceived() {
    return donationsReceived;
  }

  public void setDonationsReceived(Integer donationsReceived) {
    this.donationsReceived = donationsReceived;
  }

  public PlayerDetail totalDonations(Integer totalDonations) {
    this.totalDonations = totalDonations;
    return this;
  }

   /**
   * Get totalDonations
   * @return totalDonations
  **/
  @ApiModelProperty(value = "")
  public Integer getTotalDonations() {
    return totalDonations;
  }

  public void setTotalDonations(Integer totalDonations) {
    this.totalDonations = totalDonations;
  }

  public PlayerDetail warDayWins(Integer warDayWins) {
    this.warDayWins = warDayWins;
    return this;
  }

   /**
   * Get warDayWins
   * @return warDayWins
  **/
  @ApiModelProperty(value = "")
  public Integer getWarDayWins() {
    return warDayWins;
  }

  public void setWarDayWins(Integer warDayWins) {
    this.warDayWins = warDayWins;
  }

  public PlayerDetail clanCardsCollected(Integer clanCardsCollected) {
    this.clanCardsCollected = clanCardsCollected;
    return this;
  }

   /**
   * Get clanCardsCollected
   * @return clanCardsCollected
  **/
  @ApiModelProperty(value = "")
  public Integer getClanCardsCollected() {
    return clanCardsCollected;
  }

  public void setClanCardsCollected(Integer clanCardsCollected) {
    this.clanCardsCollected = clanCardsCollected;
  }

  public PlayerDetail clan(ClanBase clan) {
    this.clan = clan;
    return this;
  }

   /**
   * Get clan
   * @return clan
  **/
  @ApiModelProperty(value = "")
  public ClanBase getClan() {
    return clan;
  }

  public void setClan(ClanBase clan) {
    this.clan = clan;
  }

  public PlayerDetail arena(Arena arena) {
    this.arena = arena;
    return this;
  }

   /**
   * Get arena
   * @return arena
  **/
  @ApiModelProperty(value = "")
  public Arena getArena() {
    return arena;
  }

  public void setArena(Arena arena) {
    this.arena = arena;
  }

  public PlayerDetail leagueStatistics(Object leagueStatistics) {
    this.leagueStatistics = leagueStatistics;
    return this;
  }

   /**
   * Get leagueStatistics
   * @return leagueStatistics
  **/
  @ApiModelProperty(value = "")
  public Object getLeagueStatistics() {
    return leagueStatistics;
  }

  public void setLeagueStatistics(Object leagueStatistics) {
    this.leagueStatistics = leagueStatistics;
  }

  public PlayerDetail achievements(List<Object> achievements) {
    this.achievements = achievements;
    return this;
  }

  public PlayerDetail addAchievementsItem(Object achievementsItem) {
    if (this.achievements == null) {
      this.achievements = new ArrayList<Object>();
    }
    this.achievements.add(achievementsItem);
    return this;
  }

   /**
   * Get achievements
   * @return achievements
  **/
  @ApiModelProperty(value = "")
  public List<Object> getAchievements() {
    return achievements;
  }

  public void setAchievements(List<Object> achievements) {
    this.achievements = achievements;
  }

  public PlayerDetail cards(List<Object> cards) {
    this.cards = cards;
    return this;
  }

  public PlayerDetail addCardsItem(Object cardsItem) {
    if (this.cards == null) {
      this.cards = new ArrayList<Object>();
    }
    this.cards.add(cardsItem);
    return this;
  }

   /**
   * Get cards
   * @return cards
  **/
  @ApiModelProperty(value = "")
  public List<Object> getCards() {
    return cards;
  }

  public void setCards(List<Object> cards) {
    this.cards = cards;
  }

  public PlayerDetail currentFavouriteCard(Object currentFavouriteCard) {
    this.currentFavouriteCard = currentFavouriteCard;
    return this;
  }

   /**
   * Get currentFavouriteCard
   * @return currentFavouriteCard
  **/
  @ApiModelProperty(value = "")
  public Object getCurrentFavouriteCard() {
    return currentFavouriteCard;
  }

  public void setCurrentFavouriteCard(Object currentFavouriteCard) {
    this.currentFavouriteCard = currentFavouriteCard;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerDetail playerDetail = (PlayerDetail) o;
    return Objects.equals(this.bestTrophies, playerDetail.bestTrophies) &&
        Objects.equals(this.wins, playerDetail.wins) &&
        Objects.equals(this.losses, playerDetail.losses) &&
        Objects.equals(this.battleCount, playerDetail.battleCount) &&
        Objects.equals(this.threeCrownWins, playerDetail.threeCrownWins) &&
        Objects.equals(this.challengeCardsWon, playerDetail.challengeCardsWon) &&
        Objects.equals(this.challengeMaxWins, playerDetail.challengeMaxWins) &&
        Objects.equals(this.tournamentCardsWon, playerDetail.tournamentCardsWon) &&
        Objects.equals(this.tournamentBattleCount, playerDetail.tournamentBattleCount) &&
        Objects.equals(this.role, playerDetail.role) &&
        Objects.equals(this.donations, playerDetail.donations) &&
        Objects.equals(this.donationsReceived, playerDetail.donationsReceived) &&
        Objects.equals(this.totalDonations, playerDetail.totalDonations) &&
        Objects.equals(this.warDayWins, playerDetail.warDayWins) &&
        Objects.equals(this.clanCardsCollected, playerDetail.clanCardsCollected) &&
        Objects.equals(this.clan, playerDetail.clan) &&
        Objects.equals(this.arena, playerDetail.arena) &&
        Objects.equals(this.leagueStatistics, playerDetail.leagueStatistics) &&
        Objects.equals(this.achievements, playerDetail.achievements) &&
        Objects.equals(this.cards, playerDetail.cards) &&
        Objects.equals(this.currentFavouriteCard, playerDetail.currentFavouriteCard) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bestTrophies, wins, losses, battleCount, threeCrownWins, challengeCardsWon, challengeMaxWins, tournamentCardsWon, tournamentBattleCount, role, donations, donationsReceived, totalDonations, warDayWins, clanCardsCollected, clan, arena, leagueStatistics, achievements, cards, currentFavouriteCard, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerDetail {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    bestTrophies: ").append(toIndentedString(bestTrophies)).append("\n");
    sb.append("    wins: ").append(toIndentedString(wins)).append("\n");
    sb.append("    losses: ").append(toIndentedString(losses)).append("\n");
    sb.append("    battleCount: ").append(toIndentedString(battleCount)).append("\n");
    sb.append("    threeCrownWins: ").append(toIndentedString(threeCrownWins)).append("\n");
    sb.append("    challengeCardsWon: ").append(toIndentedString(challengeCardsWon)).append("\n");
    sb.append("    challengeMaxWins: ").append(toIndentedString(challengeMaxWins)).append("\n");
    sb.append("    tournamentCardsWon: ").append(toIndentedString(tournamentCardsWon)).append("\n");
    sb.append("    tournamentBattleCount: ").append(toIndentedString(tournamentBattleCount)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    donations: ").append(toIndentedString(donations)).append("\n");
    sb.append("    donationsReceived: ").append(toIndentedString(donationsReceived)).append("\n");
    sb.append("    totalDonations: ").append(toIndentedString(totalDonations)).append("\n");
    sb.append("    warDayWins: ").append(toIndentedString(warDayWins)).append("\n");
    sb.append("    clanCardsCollected: ").append(toIndentedString(clanCardsCollected)).append("\n");
    sb.append("    clan: ").append(toIndentedString(clan)).append("\n");
    sb.append("    arena: ").append(toIndentedString(arena)).append("\n");
    sb.append("    leagueStatistics: ").append(toIndentedString(leagueStatistics)).append("\n");
    sb.append("    achievements: ").append(toIndentedString(achievements)).append("\n");
    sb.append("    cards: ").append(toIndentedString(cards)).append("\n");
    sb.append("    currentFavouriteCard: ").append(toIndentedString(currentFavouriteCard)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

